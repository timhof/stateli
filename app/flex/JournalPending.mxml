<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="index.send()" layout="vertical">

<mx:Script>
	<![CDATA[
		import mx.collections.ArrayCollection;
		import mx.utils.ArrayUtil;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.xml.SimpleXMLDecoder;
		import mx.controls.Alert;
		import mx.charts.series.LineSeries;
		
		import lib.TimelineEvent;
		import lib.JournalAccount;
		import lib.Account;
		import lib.Transaction;
		
		[Bindable]
		private var creditJournalAccountList:ArrayCollection=new ArrayCollection();
		[Bindable]
		private var debitJournalAccountList:ArrayCollection=new ArrayCollection();
		[Bindable]
		private var journalAccount:JournalAccount;
		
		private function timelineHandler(event:ResultEvent):void{
	
			var xmlStr:String = event.result.toString();
			var xmlDoc:XMLDocument = new XMLDocument(xmlStr);
			var decoder:SimpleXMLDecoder = new SimpleXMLDecoder(true);
			var resultObj:Object = decoder.decodeXML(xmlDoc);
	
			var creditAccountAC:ArrayCollection = new ArrayCollection(Array(resultObj.hash.credits.credit));
			var debitAccountAC:ArrayCollection = new ArrayCollection(Array(resultObj.hash.debits.debit));

			creditJournalAccountList = getJournalAccountList(creditAccountAC);
			trace("CREDIT");
			for(var countAcc:int = 0; countAcc < creditJournalAccountList.length; countAcc++){
				var ja:JournalAccount = creditJournalAccountList.getItemAt(countAcc, 0) as JournalAccount;
				var account:Account = ja.account;
				var transactionList = ja.transactions;
				
				trace("\t" + account.name);
				for(var countTrans:int = 0; countTrans < transactionList.length; countTrans++){
					var tr:Transaction = transactionList.getItemAt(countTrans, 0);
					trace("\t\t" + tr.balance);
				}
			}
			
			debitJournalAccountList = getJournalAccountList(debitAccountAC);
			trace("DEBIT");
			for(var countAcc:int = 0; countAcc < debitJournalAccountList.length; countAcc++){
				var ja:JournalAccount = debitJournalAccountList.getItemAt(countAcc, 0) as JournalAccount;
				var account:Account = ja.account;
				var transactionList = ja.transactions;
				
				trace("\t" + account.name);
				for(var countTrans:int = 0; countTrans < transactionList.length; countTrans++){
					var tr:Transaction = transactionList.getItemAt(countTrans, 0);
					trace("\t\t" + tr.date_executed);
				}
			}
			
			journalAccount = debitJournalAccountList.getItemAt(0, 0) as JournalAccount;
			
			for(var jacount:int = 0;jacount < debitJournalAccountList.length;jacount++){
				var ja:JournalAccount = debitJournalAccountList.getItemAt(jacount, 0) as JournalAccount;
				var newlineseries:LineSeries = new LineSeries();
				newlineseries.yField = "balance";
				newlineseries.displayName = ja.account.name;
				newlineseries.xField = "date_executed";
				newlineseries.dataProvider = ja.transactions;
				
				var tmp:Array = mychart.series;
				tmp.push(newlineseries);
				mychart.series = tmp;
			}
		}
		
		public function getJournalAccountList(accountAC:ArrayCollection):ArrayCollection{
		
			var journalAccountList:ArrayCollection = new ArrayCollection();
		 
			for(var countAcc:int = 0; countAcc < accountAC.length; countAcc++){
				var acc:Object = accountAC.getItemAt(countAcc, 0);
				if(acc){
					if(acc.length){
						for(var countAcc2:int = 0; countAcc2 < acc.length; countAcc2++){
		
							var account:Account = new Account(acc[countAcc2].account.name, acc[countAcc2].account.description);
							var transactionAC:ArrayCollection = new ArrayCollection(Array(acc[countAcc2].transactions.transaction));
					
							var transactionList = getTransactionList(transactionAC);
					
							var ja:JournalAccount = new JournalAccount(account, transactionList);
							journalAccountList.addItem(ja);
						}
					}
					else{
						var account:Account = new Account(acc.account.name, acc.account.description);
						var transactionAC:ArrayCollection = new ArrayCollection(Array(acc.transactions.transaction));
						var transactionList = getTransactionList(transactionAC);
						
						var ja:JournalAccount = new JournalAccount(account, transactionList);
						journalAccountList.addItem(ja);
					}
				}
			}
			
			
			return journalAccountList;
		}
		
		public function getTransactionList(transactionAC:ArrayCollection):ArrayCollection{
			var newAC:ArrayCollection = new ArrayCollection();
		 
			for(var countTrans:int = 0; countTrans < transactionAC.length; countTrans++){
				var p:Object = transactionAC.getItemAt(countTrans, 0);
				
				if(p.length){
					for(var countTrans2:int = 0; countTrans2 < p.length; countTrans2++){
						var tr:Transaction = new Transaction(p[countTrans2]["name"], p[countTrans2]["description"], p[countTrans2]["executed_date"], p[countTrans2]["account_balance"]);
						newAC.addItem(tr);
					}
				}
				else{
					var tr:Transaction = new Transaction(p["name"], p["description"], p["executed_date"], p["account_balance"]);
					newAC.addItem(tr);
				}
			}
			
			return newAC;
		}
		
		public function myParseFunction(t:String):Date { 
			trace(t);
			var yearMonthDay:Array = t.split("-");
	
            var newDate:Date = new Date(yearMonthDay[0], yearMonthDay[1]-1, yearMonthDay[2]);
            return newDate;
        }
		
	]]>
</mx:Script>

<mx:HTTPService url="pending_flex.xml" id="index" result="timelineHandler(event)" resultFormat="e4x" />

<mx:Stroke id = "s1" color="blue" weight="2"/>

<mx:Panel height="100%" width="100%">
    
        <mx:LineChart id="mychart" height="100%" width="100%"
            paddingRight="5" paddingLeft="5" 
            showDataTips="true">
            
            <mx:horizontalAxis>
                <mx:DateTimeAxis dataUnits="days" parseFunction="myParseFunction"/>
            </mx:horizontalAxis>
			 <mx:verticalAxis>
                <mx:LinearAxis baseAtZero="false" />
            </mx:verticalAxis>
       
        </mx:LineChart>
	
        <mx:Legend dataProvider="{mychart}"/>
    </mx:Panel>
</mx:Application>

